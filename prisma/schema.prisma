generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  UserID             Int            @id @default(autoincrement())
  Email              String         @unique(map: "User_email_key")
  Role               String         @default("user")
  SubscriptionStatus String?
  PrimaryUserID      Int?
  PlanID             Int?
  CreatedAt          DateTime       @default(now())
  UpdatedAt          DateTime
  FirstName          String?
  LastName           String?
  CreatedOn          DateTime?
  FailedSignIns      Int            @default(0)
  FullName           String?
  IsSuspended        Boolean        @default(false)
  LastSignedIn       DateTime?
  Picture            String?
  TotalSignIns       Int            @default(0)
  KindeUserID        String         @unique(map: "User_kindeuserid_key")
  Payment            Payment[]
  Settings           Settings[]
  SubUsers           SubUsers[]
  Subscription       Subscription[]
  Plan               Plan?          @relation(fields: [PlanID], references: [PlanID], map: "User_planId_fkey")
  User               User?          @relation("UserToUser", fields: [PrimaryUserID], references: [UserID], map: "User_primaryUserId_fkey")
  other_User         User[]         @relation("UserToUser")
}

model Plan {
  PlanID             Int       @id @default(autoincrement())
  PlanName           String
  Price              Float
  MaxUsers           Int
  AdditionalUserCost Float?
  CreatedAt          DateTime  @default(now())
  UpdatedAt          DateTime
  Payment            Payment[]
  User               User[]
}

model Payment {
  PaymentID       Int           @id @default(autoincrement())
  UserID          Int
  PlanID          Int
  Amount          Float
  PaymentStatus   String
  CreatedAt       DateTime      @default(now())
  UpdatedAt       DateTime
  SubscriptionID  String?
  subscriptionId  String?
  stripeInvoiceId String?
  paymentDate     DateTime      @default(now()) @db.Timestamptz(6)
  webhookData     Json?
  Subscription    Subscription? @relation(fields: [SubscriptionID], references: [SubscriptionID], onDelete: Cascade, onUpdate: NoAction)
  Plan            Plan          @relation(fields: [PlanID], references: [PlanID], map: "Payment_planId_fkey")
  User            User          @relation(fields: [UserID], references: [UserID], map: "Payment_userId_fkey")
}

model Settings {
  SettingID            Int       @id(map: "settings_pkey") @default(autoincrement())
  UserID               Int?
  NewsletterSubscribed Boolean?  @default(false)
  CreatedAt            DateTime? @default(now()) @db.Timestamp(6)
  UpdatedAt            DateTime? @default(now()) @db.Timestamp(6)
  User                 User?     @relation(fields: [UserID], references: [UserID], onDelete: Cascade, onUpdate: NoAction, map: "settings_userid_fkey")
}

model SubUsers {
  SubUserID     Int       @id @default(autoincrement())
  PrimaryUserID Int?
  Email         String    @unique
  CreatedAt     DateTime? @default(now()) @db.Timestamp(6)
  User          User?     @relation(fields: [PrimaryUserID], references: [UserID], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model Subscription {
  SubscriptionID String    @id(map: "subscription_pkey")
  UserID         Int?
  PlanID         String?
  Status         String?
  CreatedAt      DateTime? @default(now()) @db.Timestamp(6)
  UpdatedAt      DateTime? @default(now()) @db.Timestamp(6)
  Payment        Payment[]
  User           User?     @relation(fields: [UserID], references: [UserID], onDelete: Cascade, onUpdate: NoAction, map: "subscription_userid_fkey")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model admin_logs {
  id         BigInt    @id @default(autoincrement())
  timestamp  DateTime  @default(now()) @db.Timestamptz(6)
  level      String    @db.VarChar(10)
  phase      String    @db.VarChar(50)
  message    String
  operation  String?   @db.VarChar(100)
  user_email String?   @db.VarChar(255)
  metadata   Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@index([level], map: "idx_admin_logs_level")
  @@index([operation], map: "idx_admin_logs_operation")
  @@index([phase], map: "idx_admin_logs_phase")
  @@index([timestamp(sort: Desc)], map: "idx_admin_logs_timestamp")
  @@index([user_email], map: "idx_admin_logs_user_email")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model admin_users {
  id          Int       @id @default(autoincrement())
  email       String    @unique @db.VarChar(255)
  role        String?   @default("admin") @db.VarChar(100)
  permissions Json?     @default("{}")
  is_active   Boolean?  @default(true)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([is_active], map: "idx_admin_users_active")
  @@index([email], map: "idx_admin_users_email")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bill_track_50 {
  url                      String  @id
  state                    String?
  bill_number              String?
  service_lines_impacted   String?
  service_lines_impacted_1 String?
  service_lines_impacted_2 String?
  service_lines_impacted_3 String?
  name                     String?
  ai_summary               String?
  bill_progress            String?
  last_action              String?
  created                  String?
  action_date              String?
  sponsor_list             String?
  date_extracted           String?
  is_new                   String?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model code_definitions {
  hcpcs_code_cpt_code String?
  service_code        String?
  service_description String?

  @@ignore
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model email_verification_ip_throttle {
  ip           String   @id
  window_start DateTime @db.Timestamptz(6)
  count        Int      @default(0)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model email_verifications {
  email       String    @id
  code_hash   String
  expires_at  DateTime  @db.Timestamptz(6)
  verified_at DateTime? @db.Timestamptz(6)
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime  @default(now()) @db.Timestamptz(6)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model marketing_email_list {
  email        String  @id
  firstname    String?
  lastname     String?
  company_name String?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model master_data {
  id                    String?
  service_category      String?
  service_sub_category  String?
  state_id_pk           String?
  state_name            String?
  state_code            String?
  filename              String?
  page_number           String?
  service_id_pk         String?
  service_code          String?
  service_description   String?
  rate                  String?
  rate_last_updated     String?
  rate_effective_date   DateTime? @db.Date
  duration_unit         String?
  minutes               String?
  program               String?
  modifier_1            String?
  modifier_1_details    String?
  modifier_2            String?
  modifier_2_details    String?
  modifier_3            String?
  modifier_3_details    String?
  modifier_4            String?
  modifier_4_details    String?
  fee                   String?
  max_fee               String?
  modifier_id_pk        String?
  service_id_fk         String?
  prior_auth_required   String?
  comments              String?
  location_region       String?
  update_id_pk          String?
  times_rate_updated    String?
  percentage_change     String?
  last_database_refresh String?
  requires_pa           String?
  rate_per_hour         String?
  provider_type         String?
  age                   String?

  @@ignore
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model provider_alerts {
  id                       String  @id
  link                     String?
  state                    String?
  service_lines_impacted   String?
  service_lines_impacted_1 String?
  service_lines_impacted_2 String?
  service_lines_impacted_3 String?
  subject                  String?
  announcement_date        String?
  is_new                   String?
  summary                  String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model registrationform {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  firstname     String?
  lastname      String?
  companyname   String?
  companytype   String?
  providertype  String?
  howdidyouhear String?
  interest      String?
  demorequest   String?
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @default(now()) @db.Timestamp(6)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model service_category_list {
  id         Int     @id @default(autoincrement())
  categories String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model subscription_users {
  primary_user String @id
  sub_users    Json?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model test_email_list {
  email     String  @id
  firstname String?
  lastname  String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_email_preferences {
  id          Int       @id @default(autoincrement())
  user_email  String    @unique
  preferences Json
  created_at  DateTime? @default(now()) @db.Timestamp(6)
}
